{"remainingRequest":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\src\\views\\story\\ViewStoryPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\src\\views\\story\\ViewStoryPage.vue","mtime":1645801201981},{"path":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1643426027151},{"path":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\node_modules\\babel-loader\\lib\\index.js","mtime":1643426032229},{"path":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1643426027151},{"path":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\node_modules\\vue-loader\\lib\\index.js","mtime":1643426033742}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgSGVhZGVyIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvSGVhZGVyLnZ1ZScNCmltcG9ydCBDb21tZW50IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQ29tbWVudC52dWUnDQppbXBvcnQgeyBtYXBHZXR0ZXJzfSBmcm9tICJ2dWV4IjsNCg0KZXhwb3J0IGRlZmF1bHQgKHsNCiAgICANCiAgICBkYXRhKCkgew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgcG9zdDoge30sDQogICAgICAgICAgICBsb2FkaW5nOnRydWUsDQogICAgICAgICAgICBpc0ZvbGxvdzogZmFsc2UsDQogICAgICAgICAgICBpc0NsYXA6ZmFsc2UsDQogICAgICAgICAgICBjaGlwczpbXSwNCiAgICAgICAgICAgIGRyYXdlcjogZmFsc2UsDQogICAgICAgICAgICBpdGVtczogWw0KICAgICAgICAgICAgICAgIHsgdGl0bGU6ICdIb21lJywgaWNvbjogJ21kaS12aWV3LWRhc2hib2FyZCcgfSwNCiAgICAgICAgICAgICAgICB7IHRpdGxlOiAnQWJvdXQnLCBpY29uOiAnbWRpLWZvcnVtJyB9LA0KICAgICAgICAgICAgXSwNCiAgICAgICAgICAgIG15Q29tbWVudDonJywNCiAgICAgICAgICAgIGNvbW1lbnRzOiBbXSwNCiAgICAgICAgICAgIGlzU2hvd1dpbmRvdzoge30NCiAgICAgICAgfQ0KICAgIH0sDQogICAgbW91bnRlZCgpIHsgICAgICAgIA0KICAgICAgICB0aGlzLmdldFBvc3QoKTsNCiAgICAgICAgDQogICAgfSwNCiAgICBjb21wdXRlZDogew0KICAgICAgICAuLi5tYXBHZXR0ZXJzKFsnZ2V0VXNlciddKQ0KICAgIH0sDQogICAgY29tcG9uZW50czogew0KICAgICAgSGVhZGVyLA0KICAgICAgQ29tbWVudCAgIA0KICAgfSwNCiAgICBtZXRob2RzOiB7DQogICAgICAgIHB1c2hDb21tZW50KGRhdGEpIHsgICAgICAgICAgICANCiAgICAgICAgICAgIHRoaXMuZ2V0Q29tbWVudHMoZGF0YS5jb21tZW50LnBvc3RfaWQpOw0KICAgICAgICAgICAgdGhpcy4kZm9yY2VVcGRhdGUoKTsNCiAgICAgICAgfSwNCg0KICAgICAgICBnZXRQb3N0KCkgew0KICAgICAgICAgICAgY29uc3QgcXVlcnlTdHJpbmcgPSB3aW5kb3cubG9jYXRpb24uc2VhcmNoOw0KICAgICAgICAgICAgY29uc3QgdXJsUGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyhxdWVyeVN0cmluZyk7DQogICAgICAgICAgICBjb25zdCBwb3N0SWQgPSB1cmxQYXJhbXMuZ2V0KCdwb3N0SWQnKTsNCiAgICAgICAgICAgIC8vIGNvbnN0IHtkYXRhfSA9IGF3YWl0IHRoaXMuJEF4aW9zLmdldCgnaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS9wb3N0LycrcG9zdElkKTsNCiAgICAgICAgICAgIHRoaXMuJEF4aW9zLmdldCgnaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS9wb3N0LycrcG9zdElkKS50aGVuKChkYXRhKT0+IHsNCiAgICAgICAgICAgICAgICB0aGlzLnBvc3QgPSBkYXRhLmRhdGE7DQogICAgICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7DQogICAgICAgICAgICAgICAgaWYgKHRoaXMucG9zdC51c2VyX2lkID09IHRoaXMuZ2V0VXNlci5pZCkgdGhpcy5pc0ZvbGxvdyA9IHRydWU7DQogICAgICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuY2hlY2tGb2xsb3dpbmcodGhpcy5wb3N0LnVzZXJfaWQpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB0aGlzLmdldEhhc2h0YWdzKHBvc3RJZCk7DQogICAgICAgICAgICAgICAgdGhpcy5jaGVja1Bvc3RDbGFwKHBvc3RJZCk7DQogICAgICAgICAgICAgICAgdGhpcy5nZXRDb21tZW50cyhwb3N0SWQpOw0KICAgICAgICAgICAgfSk7DQogICAgICAgICAgICANCiAgICAgICAgfSwNCiAgICAgICAgLy8iL2FwaS91c2Vycy86dXNlcklkL2Zhdm9yaXRlcy9jcmVhdGUiDQogICAgICAgIC8vIHR5cGU9PTEgPT4gY29tbWVudA0KICAgICAgICBjcmVhdGVDbGFwKHBvc3RJZCwgdHlwZSkgew0KICAgICAgICAgICAgY29uc3QgYm9keSA9IHsNCiAgICAgICAgICAgICAgICBwb3N0X2lkOiBwb3N0SWQsDQogICAgICAgICAgICAgICAgaXNfcmVzcG9uc2U6IHR5cGUNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdodHRwOi8vbG9jYWxob3N0OjMwMDAvYXBpL3VzZXJzLycrdGhpcy5nZXRVc2VyLmlkKycvZmF2b3JpdGVzL2NyZWF0ZScpOw0KICAgICAgICAgICAgdGhpcy4kQXhpb3MucG9zdCgnaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS91c2Vycy8nK3RoaXMuZ2V0VXNlci5pZCsnL2Zhdm9yaXRlcy9jcmVhdGUnLCBib2R5KS50aGVuKChyZXMpID0+IHsgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgaWYgKHJlcy5kYXRhLm1zZyA9PSAnb2snKSB0aGlzLnBvc3QuY2xhcF9jb3VudCArPSAxOw0KICAgICAgICAgICAgICAgIHRoaXMuaXNDbGFwID0gdHJ1ZTsNCiAgICAgICAgICAgIH0pOw0KICAgICAgICB9LA0KICAgICAgICAvLyIvYXBpL3VzZXJzLzppZC9mb2xsb3ciDQogICAgICAgIGZvbGxvd0F1dGhvcihmb2xsb3dlZElkKSB7DQogICAgICAgICAgICBjb25zdCBib2R5ID0gew0KICAgICAgICAgICAgICAgIGZvbGxvd2VkX2lkIDogZm9sbG93ZWRJZA0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgdGhpcy4kQXhpb3MucG9zdCgnaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS91c2Vycy8nK3RoaXMuZ2V0VXNlci5pZCsnL2ZvbGxvdycsIGJvZHkpLnRoZW4oKHJlcykgPT4geyAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICBpZiAocmVzLmRhdGEubXNnID09ICdvaycpIHRoaXMuaXNGb2xsb3cgPSB0cnVlOw0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLy8iL2FwaS91c2Vycy86aWQvZm9sbG93Lzp0YXJnZXRfaWQiDQogICAgICAgIGNoZWNrRm9sbG93aW5nKGZvbGxvd2VkSWQpIHsNCiAgICAgICAgICAgIHRoaXMuJEF4aW9zLmdldCgnaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS91c2Vycy8nK3RoaXMuZ2V0VXNlci5pZCsnL2ZvbGxvdy8nK2ZvbGxvd2VkSWQpLnRoZW4oKHJlcykgPT4geyAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICBpZiAocmVzLmRhdGEubXNnID09ICdleGlzdCcpIHRoaXMuaXNGb2xsb3cgPSB0cnVlOw0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0sDQogICAgICAgIC8vIi9hcGkvdXNlcnMvOnVzZXJJZC9mYXZvcml0ZXMvOnBvc3RJZCINCiAgICAgICAgY2hlY2tQb3N0Q2xhcChwb3N0SWQpIHsNCiAgICAgICAgICAgIC8vaWYgcG9zdCBhdXRob3IgaXMgbWUsIGhpZGUgY2xhcCBidXR0b24NCiAgICAgICAgICAgIGlmICh0aGlzLnBvc3QudXNlcl9pZCA9PSB0aGlzLmdldFVzZXIuaWQpIHRoaXMuaXNDbGFwID0gdHJ1ZTsNCiAgICAgICAgICAgIGVsc2UgeyAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIHRoaXMuJEF4aW9zLmdldCgiL2FwaS91c2Vycy8iK3RoaXMuZ2V0VXNlci5pZCsiL2Zhdm9yaXRlcy8iK3Bvc3RJZCkudGhlbigocmVzKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGlmIChyZXMuZGF0YS5tc2cgPT0gJ2V4aXN0JykgdGhpcy5pc0NsYXAgPSB0cnVlOw0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfSAgICAgICAgICANCiAgICAgICAgfSwgICAgICAgDQoNCiAgICAgICAgYXN5bmMgZ2V0SGFzaHRhZ3MocG9zdElkKSB7DQogICAgICAgICAgICBjb25zdCB7ZGF0YX0gPSBhd2FpdCB0aGlzLiRBeGlvcy5nZXQoImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvaGFzaHRhZ3MvIitwb3N0SWQpOw0KICAgICAgICAgICAgLy8gY29uc29sZS5sb2coZGF0YSk7DQogICAgICAgICAgICB0aGlzLmNoaXBzID0gZGF0YTsNCiAgICAgICAgfSwNCg0KICAgICAgICBzaG93Q29tbWVudFdpbmRvdyhJZCkgew0KICAgICAgICAgICAgaWYgKHRoaXMuaXNTaG93V2luZG93W0lkXSA9PSAndW5kZWZpbmVkJyB8fCB0aGlzLmlzU2hvd1dpbmRvd1tJZF0gPT0gZmFsc2UpIA0KICAgICAgICAgICAgICAgIHRoaXMuaXNTaG93V2luZG93W0lkXSA9IHRydWU7IA0KICAgICAgICAgICAgZWxzZQ0KICAgICAgICAgICAgICAgIHRoaXMuaXNTaG93V2luZG93W0lkXSA9IGZhbHNlDQogICAgICAgICAgICBjb25zb2xlLmxvZyhJZCsnOiAnK3RoaXMuaXNTaG93V2luZG93W0lkXSk7DQogICAgICAgIH0sDQoNCiAgICAgICAgcmVtb3ZlQ29tbWVudCgpIHsNCiAgICAgICAgICAgIHRoaXMubXlDb21tZW50ID0gJyc7DQogICAgICAgIH0sDQogICAgICAgIC8vIi9hcGkvY29tbWVudC86cG9zdElkIg0KICAgICAgICBjcmVhdGVDb21tZW50KHBvc3RJZCwgcGFyZW50SWQsIGRlcHRoLCByZXNwb25zZUNvdW50KSB7DQogICAgICAgICAgICBjb25zdCBib2R5ID0gew0KICAgICAgICAgICAgICAgIHBhcmVudElkOiBwYXJlbnRJZCwNCiAgICAgICAgICAgICAgICB1c2VySWQ6IHRoaXMuZ2V0VXNlci5pZCwNCiAgICAgICAgICAgICAgICBkZXB0aDogZGVwdGgsDQogICAgICAgICAgICAgICAgY29udGVudDogdGhpcy5teUNvbW1lbnQsDQogICAgICAgICAgICAgICAgcmVzcG9uc2VfY291bnQ6IHJlc3BvbnNlQ291bnQNCiAgICAgICAgICAgIH07DQogICAgICAgICAgICB0aGlzLiRBeGlvcy5wb3N0KCJodHRwOi8vbG9jYWxob3N0OjMwMDAvYXBpL2NvbW1lbnQvIitwb3N0SWQsIGJvZHkpLnRoZW4oKHJlcykgPT4gew0KICAgICAgICAgICAgICAgICAgICBpZiAocmVzLmRhdGEubXNnID09ICdvaycpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0Q29tbWVudHMocG9zdElkKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucG9zdC5yZXNwb25zZV9jb3VudCArPSAxOyAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRmb3JjZVVwZGF0ZSgpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KQ0KICAgICAgICB9LA0KDQogICAgICAgIGdldENvbW1lbnRzKHBvc3RJZCkgew0KICAgICAgICAgICAgdGhpcy4kQXhpb3MuZ2V0KCIvYXBpL2NvbW1lbnQvIitwb3N0SWQpLnRoZW4oKHJlcykgPT4gew0KICAgICAgICAgICAgICAgIGlmIChyZXMuZGF0YS5tc2cgPT0gIm9rIikgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbW1lbnRzPVtdOw0KICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBjb21tZW50IG9mIHJlcy5kYXRhLmRhdGEpDQogICAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29tbWVudHMucHVzaChjb21tZW50KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLmNvbW1lbnRzKTsNCiAgICAgICAgICAgIH0pOw0KICAgICAgICB9DQogICAgfQ0KfSkNCg=="},{"version":3,"sources":["ViewStoryPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"ViewStoryPage.vue","sourceRoot":"src/views/story","sourcesContent":["<template>\r\n    <v-app>\r\n        <Header/>\r\n        <template v-if=\"loading\">\r\n            <v-progress-linear\r\n                indeterminate\r\n                color=\"yellow darken-2\"\r\n            ></v-progress-linear>\r\n        </template>\r\n        <v-container class=\"ma-6\">\r\n            <v-row class=\"ma-8\">  \r\n                <v-col align=\"center\" class=\"ma-6\">            \r\n                    <h1 style=\"border-margin: 10px\" v-html=\"post.title\"></h1>\r\n                </v-col>            \r\n            </v-row>\r\n            <v-row align=\"center\">\r\n                <v-col cols=\"12\" md=\"2\"></v-col>\r\n                <v-col cols=\"12\" md=\"8\" class=\"d-flex\">\r\n                    <v-avatar class=\"ma-2\">\r\n                        <img :src=\"post.photo\">\r\n                    </v-avatar>\r\n                    <v-col cols=\"12\" md=\"6\">   \r\n                        <v-row class=\"ma-n1\">                     \r\n                            {{post.name}}\r\n                            <v-spacer></v-spacer>\r\n                            <v-btn v-if=\"!isFollow\" small rounded color=\"grey\" @click=\"followAuthor(post.user_id)\">\r\n                                follow\r\n                            </v-btn>\r\n                            <v-spacer></v-spacer>\r\n                        </v-row>\r\n                        <v-row class=\"ma-n1\">\r\n                            <v-col cols=\"12\" md=\"10\">\r\n                                {{post.date}}\r\n                            </v-col>\r\n                        </v-row>\r\n                    </v-col>\r\n                </v-col>\r\n            </v-row>\r\n            <v-row>\r\n                <v-col cols=\"12\" md=\"2\"></v-col>\r\n                <v-col cols=\"12\" md=\"8\" class=\"ml-8\">\r\n                    <v-row>\r\n                        <span class=\"ma-6\" v-html=\"post.content\"></span>\r\n                    </v-row>\r\n                    <v-row >\r\n                        <v-col>\r\n                            <v-container dense class=\"d-flex\">\r\n                                <v-col>\r\n                                    <v-container>\r\n                                        <h3>Hashtags: </h3>\r\n                                    </v-container>\r\n                                </v-col>\r\n                                <v-container>\r\n                                    <v-chip v-for=\"chip in chips\" :key=\"chip\" class=\"ma-2\">\r\n                                        {{chip}}\r\n                                    </v-chip>\r\n                                </v-container>\r\n                            </v-container>\r\n                        </v-col>\r\n                    </v-row>\r\n                    <v-row>\r\n                        <v-col cols=\"12\" md=\"6\" class=\"d-flex\">\r\n                            <v-container>\r\n                                <v-btn :disabled=\"isClap\" @click=\"createClap(post.id, 0)\">\r\n                                    <v-icon color=\"blue darken-2\">mdi-thumb-up</v-icon>                            \r\n                                </v-btn>\r\n                                <span class=\"ml-5\">{{post.clap_count}}</span>\r\n                            </v-container>\r\n                            <v-container>\r\n                                <v-btn @click=\"drawer = !drawer\">\r\n                                    <v-icon color=\"blue darken-2\">\r\n                                    mdi-message-text\r\n                                    </v-icon>\r\n                                </v-btn>\r\n                                <span class=\"ml-5\">{{post.response_count}}</span>\r\n                            </v-container>\r\n                        </v-col>\r\n                    </v-row>\r\n                    \r\n                </v-col>\r\n                <v-col cols=\"12\" md=\"2\"></v-col>\r\n            </v-row>            \r\n        </v-container>\r\n        <v-navigation-drawer v-model=\"drawer\" temporary fixed right width=\"380\">\r\n            <v-list-item>\r\n                <v-list-item-avatar>\r\n                    <v-img :src=\"this.getUser.photo\"></v-img>\r\n                </v-list-item-avatar>\r\n\r\n                <v-list-item-content>\r\n                    <v-list-item-title class=\"text-h6\">{{this.getUser.username}}</v-list-item-title>\r\n                </v-list-item-content>\r\n            </v-list-item>\r\n            <v-container>\r\n                <v-textarea auto-grow label=\"Comment\" solo outlined v-model=\"myComment\">                   \r\n                </v-textarea>\r\n                <v-row>\r\n                    <v-col align=\"center\">\r\n                        <v-btn small @click=\"removeComment()\">\r\n                            Cancel\r\n                        </v-btn>\r\n                        <v-btn small @click=\"createComment(post.id, 0, 0, post.response_count)\">\r\n                            Reply\r\n                        </v-btn>\r\n                    </v-col>\r\n                </v-row>\r\n            </v-container>\r\n            <v-divider></v-divider>\r\n\r\n            <v-list dense>\r\n                <v-list-item v-for=\"item in comments\" :key=\"item.comment.id\" link :style=\"'border-top: '+(item.comment.depth==1? 1 : 0)+'px solid grey'\">\r\n                    <Comment :commentData=\"item\" :post=\"post\" @msg=\"pushComment\"/>                    \r\n                    \r\n                </v-list-item>\r\n            </v-list>\r\n        </v-navigation-drawer>\r\n    </v-app>\r\n</template>\r\n\r\n<script>\r\nimport Header from '../../components/Header.vue'\r\nimport Comment from '../../components/Comment.vue'\r\nimport { mapGetters} from \"vuex\";\r\n\r\nexport default ({\r\n    \r\n    data() {\r\n        return {\r\n            post: {},\r\n            loading:true,\r\n            isFollow: false,\r\n            isClap:false,\r\n            chips:[],\r\n            drawer: false,\r\n            items: [\r\n                { title: 'Home', icon: 'mdi-view-dashboard' },\r\n                { title: 'About', icon: 'mdi-forum' },\r\n            ],\r\n            myComment:'',\r\n            comments: [],\r\n            isShowWindow: {}\r\n        }\r\n    },\r\n    mounted() {        \r\n        this.getPost();\r\n        \r\n    },\r\n    computed: {\r\n        ...mapGetters(['getUser'])\r\n    },\r\n    components: {\r\n      Header,\r\n      Comment   \r\n   },\r\n    methods: {\r\n        pushComment(data) {            \r\n            this.getComments(data.comment.post_id);\r\n            this.$forceUpdate();\r\n        },\r\n\r\n        getPost() {\r\n            const queryString = window.location.search;\r\n            const urlParams = new URLSearchParams(queryString);\r\n            const postId = urlParams.get('postId');\r\n            // const {data} = await this.$Axios.get('http://localhost:3000/api/post/'+postId);\r\n            this.$Axios.get('http://localhost:3000/api/post/'+postId).then((data)=> {\r\n                this.post = data.data;\r\n                this.loading = false;\r\n                if (this.post.user_id == this.getUser.id) this.isFollow = true;\r\n                else {\r\n                    this.checkFollowing(this.post.user_id);\r\n                }\r\n                this.getHashtags(postId);\r\n                this.checkPostClap(postId);\r\n                this.getComments(postId);\r\n            });\r\n            \r\n        },\r\n        //\"/api/users/:userId/favorites/create\"\r\n        // type==1 => comment\r\n        createClap(postId, type) {\r\n            const body = {\r\n                post_id: postId,\r\n                is_response: type\r\n            }\r\n            // console.log('http://localhost:3000/api/users/'+this.getUser.id+'/favorites/create');\r\n            this.$Axios.post('http://localhost:3000/api/users/'+this.getUser.id+'/favorites/create', body).then((res) => {                \r\n                if (res.data.msg == 'ok') this.post.clap_count += 1;\r\n                this.isClap = true;\r\n            });\r\n        },\r\n        //\"/api/users/:id/follow\"\r\n        followAuthor(followedId) {\r\n            const body = {\r\n                followed_id : followedId\r\n            }\r\n            this.$Axios.post('http://localhost:3000/api/users/'+this.getUser.id+'/follow', body).then((res) => {                \r\n                if (res.data.msg == 'ok') this.isFollow = true;\r\n            });\r\n        },\r\n\r\n        //\"/api/users/:id/follow/:target_id\"\r\n        checkFollowing(followedId) {\r\n            this.$Axios.get('http://localhost:3000/api/users/'+this.getUser.id+'/follow/'+followedId).then((res) => {                \r\n                if (res.data.msg == 'exist') this.isFollow = true;\r\n            });\r\n        },\r\n        //\"/api/users/:userId/favorites/:postId\"\r\n        checkPostClap(postId) {\r\n            //if post author is me, hide clap button\r\n            if (this.post.user_id == this.getUser.id) this.isClap = true;\r\n            else {            \r\n                this.$Axios.get(\"/api/users/\"+this.getUser.id+\"/favorites/\"+postId).then((res) => {\r\n                    if (res.data.msg == 'exist') this.isClap = true;\r\n                });\r\n            }          \r\n        },       \r\n\r\n        async getHashtags(postId) {\r\n            const {data} = await this.$Axios.get(\"http://localhost:3000/api/hashtags/\"+postId);\r\n            // console.log(data);\r\n            this.chips = data;\r\n        },\r\n\r\n        showCommentWindow(Id) {\r\n            if (this.isShowWindow[Id] == 'undefined' || this.isShowWindow[Id] == false) \r\n                this.isShowWindow[Id] = true; \r\n            else\r\n                this.isShowWindow[Id] = false\r\n            console.log(Id+': '+this.isShowWindow[Id]);\r\n        },\r\n\r\n        removeComment() {\r\n            this.myComment = '';\r\n        },\r\n        //\"/api/comment/:postId\"\r\n        createComment(postId, parentId, depth, responseCount) {\r\n            const body = {\r\n                parentId: parentId,\r\n                userId: this.getUser.id,\r\n                depth: depth,\r\n                content: this.myComment,\r\n                response_count: responseCount\r\n            };\r\n            this.$Axios.post(\"http://localhost:3000/api/comment/\"+postId, body).then((res) => {\r\n                    if (res.data.msg == 'ok') {\r\n                        this.getComments(postId);\r\n                        this.post.response_count += 1;                       \r\n                        this.$forceUpdate();\r\n                    }\r\n            })\r\n        },\r\n\r\n        getComments(postId) {\r\n            this.$Axios.get(\"/api/comment/\"+postId).then((res) => {\r\n                if (res.data.msg == \"ok\") {\r\n                    this.comments=[];\r\n                    for (let comment of res.data.data)\r\n                    {\r\n                        this.comments.push(comment);\r\n                    }\r\n                }\r\n                // console.log(this.comments);\r\n            });\r\n        }\r\n    }\r\n})\r\n</script>\r\n"]}]}