{"remainingRequest":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\src\\components\\Comment.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\src\\components\\Comment.vue","mtime":1646180415449},{"path":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1643426027151},{"path":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\node_modules\\babel-loader\\lib\\index.js","mtime":1643426032229},{"path":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1643426027151},{"path":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\node_modules\\vue-loader\\lib\\index.js","mtime":1643426033742}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBtYXBHZXR0ZXJzfSBmcm9tICJ2dWV4IjsNCg0KZXhwb3J0IGRlZmF1bHQgKHsNCiAgICBuYW1lOiAnQ29tbWVudCcsDQogICAgZW1pdHM6IFsnbXNnJ10sDQogICAgcHJvcHM6IHsNCiAgICAgICAgY29tbWVudERhdGE6IHt9LA0KICAgICAgICBwb3N0OiB7fQ0KICAgIH0sDQogICAgZGF0YSgpIHsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgIGlzU2hvd1dpbmRvdzogZmFsc2UsDQogICAgICAgICAgICBteUNvbW1lbnQ6JycsDQogICAgICAgICAgICBpc0NvbW1lbnQ6IGZhbHNlLA0KICAgICAgICB9DQogICAgfSwNCg0KICAgIGNvbXB1dGVkOiB7DQogICAgICAgIC4uLm1hcEdldHRlcnMoWydnZXRVc2VyJ10pDQogICAgfSwNCg0KICAgIG1vdW50ZWQoKSB7DQogICAgICAgIGlmICh0aGlzLmdldFVzZXIuaWQgPT0gMCkgdGhpcy5pc0NvbW1lbnQgPSB0cnVlOw0KICAgIH0sDQoNCiAgICBtZXRob2RzOiB7DQogICAgICAgIGNyZWF0ZUNvbW1lbnQocG9zdElkLCBwYXJlbnRJZCwgZGVwdGgsIHJlc3BvbnNlQ291bnQpIHsNCiAgICAgICAgICAgIGNvbnN0IGJvZHkgPSB7DQogICAgICAgICAgICAgICAgcGFyZW50SWQ6IHBhcmVudElkLA0KICAgICAgICAgICAgICAgIHVzZXJJZDogdGhpcy5nZXRVc2VyLmlkLA0KICAgICAgICAgICAgICAgIGRlcHRoOiBkZXB0aCwNCiAgICAgICAgICAgICAgICBjb250ZW50OiB0aGlzLm15Q29tbWVudCwNCiAgICAgICAgICAgICAgICByZXNwb25zZV9jb3VudDogcmVzcG9uc2VDb3VudA0KICAgICAgICAgICAgfTsNCiAgICAgICAgICAgIHRoaXMuJEF4aW9zLnBvc3QoImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvY29tbWVudC8iK3Bvc3RJZCwgYm9keSkudGhlbigocmVzKSA9PiB7DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgaWYgKHJlcy5kYXRhLm1zZyA9PSAnb2snKSB7ICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgnbXNnJywgcmVzLmRhdGEuZGF0YSk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMubXlDb21tZW50PScnOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLmlzU2hvd1dpbmRvdyA9IGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pDQogICAgICAgIH0sDQoNCiAgICAgICAgDQogICAgfQ0KfSkNCg=="},{"version":3,"sources":["Comment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA","file":"Comment.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <v-container :class=\"'ml-'+8*(commentData.comment.depth - 1)\">\r\n        <v-row>\r\n            <v-list-item-icon>\r\n                <v-avatar size=\"36\">\r\n                    <v-img :src=\"commentData.user.photo\"></v-img>\r\n                </v-avatar>      \r\n            </v-list-item-icon>\r\n            <v-list-item-content>\r\n                <v-list-item-title class=\"text-h6\">{{ commentData.user.name }}</v-list-item-title>\r\n                <v-list-item-subtitle v-text=\"commentData.date\"></v-list-item-subtitle>\r\n            </v-list-item-content>\r\n        </v-row>\r\n        <v-row>\r\n            <v-textarea auto-grow rows=\"1\" readonly  solo :value=\"commentData.comment.content\"></v-textarea>\r\n        </v-row>\r\n        <v-row>           \r\n            \r\n            <v-container class=\"flex\">\r\n                <!-- <v-container align=\"center\" dense>\r\n                    <span>Comments: {{commentData.comment.response_count}}</span>\r\n                </v-container> -->\r\n                <!-- <v-container> -->\r\n                    <v-col align=\"right\">\r\n                    <v-btn @click=\"isShowWindow = !isShowWindow \" >\r\n                        <v-icon color=\"blue darken-2\">\r\n                        mdi-message-text\r\n                        </v-icon>\r\n                    </v-btn>\r\n                    </v-col>\r\n                <!-- </v-container> -->\r\n            </v-container>\r\n            <v-container v-if=\"isShowWindow\">\r\n                <v-textarea auto-grow rows=\"1\" solo outlined v-model=\"myComment\">\r\n                </v-textarea>\r\n                <v-row>\r\n                    <v-col align=\"center\">\r\n                        <v-btn small @click=\"myComment=''\">\r\n                            Cancel\r\n                        </v-btn>\r\n                        <v-btn :disabled=\"isComment\" small @click=\"createComment(post.id, commentData.comment.id, commentData.comment.depth, post.response_count)\">\r\n                            Reply\r\n                        </v-btn>\r\n                    </v-col>\r\n                </v-row>\r\n            </v-container>\r\n        </v-row>                       \r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters} from \"vuex\";\r\n\r\nexport default ({\r\n    name: 'Comment',\r\n    emits: ['msg'],\r\n    props: {\r\n        commentData: {},\r\n        post: {}\r\n    },\r\n    data() {\r\n        return {\r\n            isShowWindow: false,\r\n            myComment:'',\r\n            isComment: false,\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        ...mapGetters(['getUser'])\r\n    },\r\n\r\n    mounted() {\r\n        if (this.getUser.id == 0) this.isComment = true;\r\n    },\r\n\r\n    methods: {\r\n        createComment(postId, parentId, depth, responseCount) {\r\n            const body = {\r\n                parentId: parentId,\r\n                userId: this.getUser.id,\r\n                depth: depth,\r\n                content: this.myComment,\r\n                response_count: responseCount\r\n            };\r\n            this.$Axios.post(\"http://localhost:3000/api/comment/\"+postId, body).then((res) => {\r\n                \r\n                if (res.data.msg == 'ok') {                    \r\n                    this.$emit('msg', res.data.data);\r\n                    this.myComment='';\r\n                    this.isShowWindow = false;\r\n                }\r\n            })\r\n        },\r\n\r\n        \r\n    }\r\n})\r\n</script>\r\n"]}]}