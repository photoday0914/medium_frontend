{"remainingRequest":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\src\\views\\WritePage.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\src\\views\\WritePage.vue","mtime":1645236123749},{"path":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\node_modules\\css-loader\\dist\\cjs.js","mtime":1643426029489},{"path":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1643426036593},{"path":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\node_modules\\postcss-loader\\src\\index.js","mtime":1643426032209},{"path":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1643429738495},{"path":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1643426027151},{"path":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\node_modules\\vue-loader\\lib\\index.js","mtime":1643426033742}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLyogQmFzaWMgZWRpdG9yIHN0eWxlcyAqLw0KLlByb3NlTWlycm9yIHsNCiAgPiAqICsgKiB7DQogICAgbWFyZ2luLXRvcDogMC43NWVtOw0KICB9DQp9DQo="},{"version":3,"sources":["WritePage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;AACA;AACA;AACA;AACA","file":"WritePage.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <v-app>\r\n    <div>\r\n        <editor-menu-bubble :editor=\"editor\" :tippy-options=\"{ duration: 100 }\" v-if=\"editor\">\r\n            <button @click=\"editor.chain().focus().toggleBold().run()\" :class=\"{ 'is-active': editor.isActive('bold') }\">\r\n                bold\r\n            </button>\r\n            <button @click=\"editor.chain().focus().toggleItalic().run()\" :class=\"{ 'is-active': editor.isActive('italic') }\">\r\n                italic\r\n            </button>\r\n            <button @click=\"editor.chain().focus().toggleStrike().run()\" :class=\"{ 'is-active': editor.isActive('strike') }\">\r\n                strike\r\n            </button>\r\n        </editor-menu-bubble>\r\n        <editor-content :editor=\"editor\" />\r\n    </div>\r\n    \r\n    </v-app>\r\n</template>\r\n\r\n<script>\r\nimport { Editor, EditorContent } from '@tiptap/core'\r\nimport BubbleMenu from '@tiptap/extension-bubble-menu'\r\n\r\nexport default {\r\n  components: {\r\n    EditorContent,\r\n    // BubbleMenu,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      editor: null,\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.editor = new Editor({\r\n    extensions: [\r\n        BubbleMenu.configure({\r\n        element: document.querySelector('.menu'),\r\n        }),\r\n    ],\r\n    })\r\n  },\r\n\r\n  beforeUnmount() {\r\n    this.editor.destroy()\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n/* Basic editor styles */\r\n.ProseMirror {\r\n  > * + * {\r\n    margin-top: 0.75em;\r\n  }\r\n}\r\n</style>"]}]}