{"remainingRequest":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\src\\components\\Bubble.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\src\\components\\Bubble.vue","mtime":1646189132470},{"path":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\node_modules\\css-loader\\dist\\cjs.js","mtime":1643426029489},{"path":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1643426036593},{"path":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\node_modules\\postcss-loader\\src\\index.js","mtime":1643426032209},{"path":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1643429738495},{"path":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1643426027151},{"path":"C:\\Users\\GreatHope\\Documents\\vue_practice\\vue_project\\second\\node_modules\\vue-loader\\lib\\index.js","mtime":1643426033742}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZWRpdG9yLWJveD4gKiB7DQogICAgYm9yZGVyLWNvbG9yOiBncmV5Ow0KICAgIGJvcmRlci1zdHlsZTogc29saWQ7DQogICAgYm9yZGVyLXdpZHRoOiAxcHg7DQp9DQoNCi5pcy1hY3RpdmV7DQogICAgYm9yZGVyLWNvbG9yOiBncmV5Ow0KICAgIGJvcmRlci1zdHlsZTogc29saWQ7DQogICAgYm9yZGVyLXdpZHRoOiAxcHg7DQp9DQovKiBCYXNpYyBlZGl0b3Igc3R5bGVzICovDQouUHJvc2VNaXJyb3Igew0KICA+ICogKyAqIHsNCiAgICBtYXJnaW4tdG9wOiAwLjc1ZW07DQogIH0NCn0NCg=="},{"version":3,"sources":["Bubble.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Bubble.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <v-container>\r\n        <h1>Title</h1>\r\n        <v-container>\r\n            <bubble-menu class=\"grey darken-0 text-center rounded\" :editor=\"editor1\" :tippy-options=\"{ duration: 100 }\" v-if=\"editor1\">\r\n                <button @click=\"editor1.chain().focus().toggleBold().run()\" :class=\"{ 'is-active': editor1.isActive('bold') }\">\r\n                    <v-icon>mdi-format-bold</v-icon>\r\n                </button>\r\n                <button @click=\"editor1.chain().focus().toggleItalic().run()\" :class=\"{ 'is-active': editor1.isActive('italic') }\">\r\n                    <v-icon>mdi-format-italic</v-icon>\r\n                </button>        \r\n                \r\n            </bubble-menu>          \r\n            <editor-content class=\"editor-box\" :editor=\"editor1\" placeholder=\"Title\"/>\r\n        </v-container>  \r\n    </v-container>       \r\n</template>\r\n\r\n<script>\r\nimport { Editor } from '@tiptap/core'\r\nimport { EditorContent, BubbleMenu  } from '@tiptap/vue-2'\r\nimport StarterKit from '@tiptap/starter-kit'\r\n// import { mapGetters, mapMutations} from \"vuex\";\r\n\r\nexport default {\r\n    name: \"Bubble\",\r\n    components: {\r\n        EditorContent,        \r\n        BubbleMenu,\r\n       \r\n    },\r\n    \r\n    data() {\r\n        return {\r\n            editor1: null,\r\n            content1: ''\r\n        }\r\n    },\r\n    computed: {\r\n        \r\n    },\r\n    async mounted() {\r\n        const queryString = window.location.search;\r\n        const urlParams = new URLSearchParams(queryString);\r\n        const postId = urlParams.get('postId')\r\n        let title = '';\r\n        // let postId = this.$route.query.postId\r\n        if (postId) {\r\n            const {data} = await this.$Axios.get('http://localhost:3000/api/post/'+postId);\r\n            title = data.title;\r\n            console.log('data:'+postId + ':'+title);\r\n            this.$store.dispatch(\"setStoryTitle\", title);\r\n        }\r\n        this.editor1 = new Editor({\r\n            content:title,\r\n            extensions: [\r\n                StarterKit,\r\n                \r\n            ],\r\n            onUpdate:() => {\r\n\r\n            this.content1 = this.editor1.getHTML();\r\n            this.$store.dispatch(\"setStoryTitle\", this.content1)\r\n            console.log(this.content1);\r\n            \r\n            }\r\n        });\r\n        \r\n        \r\n        \r\n       \r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.editor-box> * {\r\n    border-color: grey;\r\n    border-style: solid;\r\n    border-width: 1px;\r\n}\r\n\r\n.is-active{\r\n    border-color: grey;\r\n    border-style: solid;\r\n    border-width: 1px;\r\n}\r\n/* Basic editor styles */\r\n.ProseMirror {\r\n  > * + * {\r\n    margin-top: 0.75em;\r\n  }\r\n}\r\n</style>\r\n"]}]}